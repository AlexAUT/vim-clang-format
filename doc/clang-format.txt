*clang-format.txt*                                                        |(U^w^)|

Author : rhysd <lin90162@yahoo.co.jp>

CONTENTS         *vim-clang-format-contents*

Introduction     |vim-clang-format-introduction|
Usage            |vim-clang-format-usage|
Install          |vim-clang-format-install|
Dependency       |vim-clang-format-dependency|
Commands         |vim-clang-format-commands|
Mappings         |vim-clang-format-mappings|
Functions        |vim-clang-format-functions|
Variables        |vim-clang-format-variables|
Setup Example    |vim-clang-format-setup-example|
Repository Page  |vim-clang-format-repository-page|
License          |vim-clang-format-license|

==============================================================================
INTRODUCTION                                     *vim-clang-format-introduction*

*vim-clang-format* formats your C, C++ and Objective-C code with specific coding
style using clang.

Screenshot:
http://gifzo.net/BIteGJ9Vasg.gif



==============================================================================
USAGE                                                   *vim-clang-format-usage*

|:ClangFormat| command is available.  If you use it in normal mode, the whole
code will be formatted.  If you use it in visual mode, the selected code will
be formatted.
It is more convenient to map |:ClangFormat| to your favorite key mapping in
normal mode and visual mode.

In addition, |<Plug>(operator-clang-format)| is operator mapping to format the
|text-objects|.  It is also very useful for expert users.



==============================================================================
DEPENDENCY                                         *vim-clang-format-dependency*

|clang-format| (3.4 or later is required)
    http://clang.llvm.org/docs/ClangFormat.html
|vim-operator-user| (highly recommended)
    https://github.com/kana/vim-operator-user
|vimproc| (recommended in Windows)
    https://github.com/Shougo/vimproc.vim



==============================================================================
INSTALL                                               *vim-clang-format-install*

Using Vim plugin package manager is recommended.  I use |neobundle| and |vundle|
seems the most famous.
If you want to install manually, it is not recommended, copy files and
directories in autoload and plugin directories to your vim config directory.
vim config directory is usually $HOME/vimfiles on Windows or ~/.vim in other
operating systems.



==============================================================================
COMMANDS                                             *vim-clang-format-commands*

:[range]ClangFormat                                               *:ClangFormat*
        Format a entire current buffer with clang-format.  If [range] is
        given, |:ClangFormat| formats the range.  In visual mode, |:ClangFormat|
        formats the selected region with linewise.

:ClangFormatEchoFormattedCode                    *:ClangFormatEchoFormattedCode*
        Echo version of |:Clangformat|. Instead of editing buffer directly, echo
        the formatted text.



==============================================================================
MAPPINGS                                             *vim-clang-format-mappings*

<Plug>(operator-clang-format)                    *<Plug>(operator-clang-format)*

    Operator mapping to format source code with clang-format.  To use this
    mapping, |operator-user| is required.



==============================================================================
FUNCTIONS                                           *vim-clang-format-functions*

clang_format#replace({start_line}, {last_line})         *clang_format#replace()*
    This is function version of |:ClangFormat|. {start_line} and {last_line}
    are required.

clang_format#format({start_line}, {last_line})           *clang_format#format()*
    This function returns a formatted code.



==============================================================================
VARIABLES                                           *vim-clang-format-variables*

g:clang_format#command                                  *g:clang_format#command*
g:clang_format#code_style                            *g:clang_format#code_style*
g:clang_format#style_options                      *g:clang_format#style_options*
g:clang_format#extra_args                            *g:clang_format#extra_args*



==============================================================================
SETUP EXAMPLE                                   *vim-clang-format-setup-example*
>
  let g:clang_format#style_options = {
              \ "AccessModifierOffset" : -4,
              \ "AllowShortIfStatementsOnASingleLine" : "true",
              \ "AlwaysBreakTemplateDeclarations" : "true",
              \ "Standard" : "C++11"}

  " map to <Leader>cf in C++ code
  autocmd FileType c,cpp,objc nnoremap <buffer><Leader>cf :<C-u>ClangFormat<CR>
  autocmd FileType c,cpp,objc vnoremap <buffer><Leader>cf :ClangFormat<CR>
  " if you install vim-operator-user
  autocmd FileType c,cpp,objc map <buffer><Leader>x <Plug>(operator-clang-format)
<


==============================================================================
REPOSITORY PAGE                               *vim-clang-format-repository-page*

The latest version of |vim-clang-format| is available at
https://github.com/rhysd/vim-clang-format

Contributions (pull requests) are welcome. None of them are too short.
Especially, English check is very helpful because I'm poor at English :(



==============================================================================
LICENSE                                               *vim-clang-format-license*

|vim-clang-format| is distributed under MIT license.

  Copyright (c) 2013 rhysd

  Permission is hereby granted, free of charge, to any person obtaining
  a copy of this software and associated documentation files (the
  "Software"), to deal in the Software without restriction, including
  without limitation the rights to use, copy, modify, merge, publish,
  distribute, sublicense, and/or sell copies of the Software, and to
  permit persons to whom the Software is furnished to do so, subject to
  the following conditions:
  The above copyright notice and this permission notice shall be
  included in all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


==============================================================================
vim:tw=78:colorcolumn=78:ts=8:ft=help:norl:noet:fen:fdl=0:
